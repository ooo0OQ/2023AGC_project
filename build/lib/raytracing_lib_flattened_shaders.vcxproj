<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{BD262CCC-1480-3CEA-A754-BBB20C43B439}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>raytracing_lib_flattened_shaders</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.3.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\cb\whk\T\2s\AGC\pro1\build\CMakeFiles\f5535ce5c6a98f5f86232c9b5b977aa9\raytracing_shader.frag.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Flattening GLSL shader: shaders/raytracing_shader.frag -^&gt; D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.frag</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\cb\whk\T\2s\AGC\pro1\lib
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\ProgramData\anaconda3\python.exe D:/cb/whk/T/2s/AGC/pro1/external/grassland/scripts/flatten_glsl.py shaders/raytracing_shader.frag D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.frag
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\cb\whk\T\2s\AGC\pro1\lib\shaders\raytracing_shader.frag;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\camera_object.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\hit_record.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\material.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\point_light.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\sphere.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\triangle.glsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.frag</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Flattening GLSL shader: shaders/raytracing_shader.frag -^&gt; D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.frag</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\cb\whk\T\2s\AGC\pro1\lib
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\ProgramData\anaconda3\python.exe D:/cb/whk/T/2s/AGC/pro1/external/grassland/scripts/flatten_glsl.py shaders/raytracing_shader.frag D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.frag
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\cb\whk\T\2s\AGC\pro1\lib\shaders\raytracing_shader.frag;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\camera_object.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\hit_record.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\material.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\point_light.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\sphere.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\triangle.glsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.frag</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Flattening GLSL shader: shaders/raytracing_shader.frag -^&gt; D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.frag</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\cb\whk\T\2s\AGC\pro1\lib
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\ProgramData\anaconda3\python.exe D:/cb/whk/T/2s/AGC/pro1/external/grassland/scripts/flatten_glsl.py shaders/raytracing_shader.frag D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.frag
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\cb\whk\T\2s\AGC\pro1\lib\shaders\raytracing_shader.frag;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\camera_object.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\hit_record.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\material.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\point_light.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\sphere.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\triangle.glsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.frag</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Flattening GLSL shader: shaders/raytracing_shader.frag -^&gt; D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.frag</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\cb\whk\T\2s\AGC\pro1\lib
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\ProgramData\anaconda3\python.exe D:/cb/whk/T/2s/AGC/pro1/external/grassland/scripts/flatten_glsl.py shaders/raytracing_shader.frag D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.frag
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\cb\whk\T\2s\AGC\pro1\lib\shaders\raytracing_shader.frag;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\camera_object.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\hit_record.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\material.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\point_light.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\sphere.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\triangle.glsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.frag</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\cb\whk\T\2s\AGC\pro1\build\CMakeFiles\f5535ce5c6a98f5f86232c9b5b977aa9\raytracing_shader.vert.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Flattening GLSL shader: shaders/raytracing_shader.vert -^&gt; D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.vert</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\cb\whk\T\2s\AGC\pro1\lib
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\ProgramData\anaconda3\python.exe D:/cb/whk/T/2s/AGC/pro1/external/grassland/scripts/flatten_glsl.py shaders/raytracing_shader.vert D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.vert
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\cb\whk\T\2s\AGC\pro1\lib\shaders\raytracing_shader.vert;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\camera_object.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\hit_record.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\material.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\point_light.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\sphere.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\triangle.glsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.vert</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Flattening GLSL shader: shaders/raytracing_shader.vert -^&gt; D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.vert</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\cb\whk\T\2s\AGC\pro1\lib
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\ProgramData\anaconda3\python.exe D:/cb/whk/T/2s/AGC/pro1/external/grassland/scripts/flatten_glsl.py shaders/raytracing_shader.vert D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.vert
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\cb\whk\T\2s\AGC\pro1\lib\shaders\raytracing_shader.vert;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\camera_object.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\hit_record.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\material.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\point_light.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\sphere.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\triangle.glsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.vert</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Flattening GLSL shader: shaders/raytracing_shader.vert -^&gt; D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.vert</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\cb\whk\T\2s\AGC\pro1\lib
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\ProgramData\anaconda3\python.exe D:/cb/whk/T/2s/AGC/pro1/external/grassland/scripts/flatten_glsl.py shaders/raytracing_shader.vert D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.vert
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\cb\whk\T\2s\AGC\pro1\lib\shaders\raytracing_shader.vert;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\camera_object.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\hit_record.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\material.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\point_light.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\sphere.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\triangle.glsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.vert</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Flattening GLSL shader: shaders/raytracing_shader.vert -^&gt; D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.vert</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\cb\whk\T\2s\AGC\pro1\lib
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\ProgramData\anaconda3\python.exe D:/cb/whk/T/2s/AGC/pro1/external/grassland/scripts/flatten_glsl.py shaders/raytracing_shader.vert D:/cb/whk/T/2s/AGC/pro1/build/lib/shaders/raytracing_shader.vert
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\cb\whk\T\2s\AGC\pro1\lib\shaders\raytracing_shader.vert;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\camera_object.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\hit_record.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\material.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\point_light.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\sphere.glsl;D:\cb\whk\T\2s\AGC\pro1\lib\shaders\triangle.glsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.vert</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\cb\whk\T\2s\AGC\pro1\build\CMakeFiles\8698752a9adba2c4f283cb5753ef4c18\raytracing_lib_flattened_shaders.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.frag;D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\CMakeFiles\raytracing_lib_flattened_shaders</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.frag;D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\CMakeFiles\raytracing_lib_flattened_shaders</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.frag;D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\CMakeFiles\raytracing_lib_flattened_shaders</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.frag;D:\cb\whk\T\2s\AGC\pro1\build\lib\shaders\raytracing_shader.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\CMakeFiles\raytracing_lib_flattened_shaders</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\cb\whk\T\2s\AGC\pro1\lib\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/cb/whk/T/2s/AGC/pro1/lib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/cb/whk/T/2s/AGC/pro1 -BD:/cb/whk/T/2s/AGC/pro1/build --check-stamp-file D:/cb/whk/T/2s/AGC/pro1/build/lib/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/cb/whk/T/2s/AGC/pro1/lib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/cb/whk/T/2s/AGC/pro1 -BD:/cb/whk/T/2s/AGC/pro1/build --check-stamp-file D:/cb/whk/T/2s/AGC/pro1/build/lib/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/cb/whk/T/2s/AGC/pro1/lib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/cb/whk/T/2s/AGC/pro1 -BD:/cb/whk/T/2s/AGC/pro1/build --check-stamp-file D:/cb/whk/T/2s/AGC/pro1/build/lib/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/cb/whk/T/2s/AGC/pro1/lib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/cb/whk/T/2s/AGC/pro1 -BD:/cb/whk/T/2s/AGC/pro1/build --check-stamp-file D:/cb/whk/T/2s/AGC/pro1/build/lib/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\cb\whk\T\2s\AGC\pro1\build\lib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="D:\cb\whk\T\2s\AGC\pro1\build\lib\CMakeFiles\raytracing_lib_flattened_shaders">
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\cb\whk\T\2s\AGC\pro1\build\ZERO_CHECK.vcxproj">
      <Project>{C827EB2B-A0A4-3C6B-8D29-5FE8E2BA41D0}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.3.targets" />
  </ImportGroup>
</Project>